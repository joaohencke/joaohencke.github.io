{"version":3,"sources":["../../ui/Nav/index.js","../../components/Nav/Nav.js","../../ui/Card/index.js","../../components/Profile/Profile.js","../../components/Skills/Skills.js","../../pages/index.js","../../pages/Home/Home.js","App.js","../../components/Root/Root.js","serviceWorker.js","index.js"],"names":["nav","styled","attrs","props","className","classnames","dark","light","Nav","Brand","Items","Item","Link","href","active","target","rel","ul","li","a","Card","div","Profile","style","height","Body","Title","h4","skill","name","time","tip","skills","Skills","map","key","pages","path","exact","component","routes","route","renderRoutes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6987ad83.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport classnames from 'classnames';\n\nconst nav = styled.nav.attrs((props) => ({\n  className: classnames('navbar navbar-expand-lg', {\n    'bg-dark navbar-dark': props.dark,\n    'navbar-light bg-light': props.light,\n  }),\n}))`\n  color: #daa520;\n`;\n\nexport default nav;\n\nnav.Items = styled.ul.attrs({ className: 'navbar-nav flex-row' })``;\n\nnav.Item = styled.li.attrs((props) => ({ className: classnames('nav-item ml-1', { active: props.active }) }))``;\n\nnav.Brand = styled.a.attrs({ className: 'navbar-brand' })``;\n\nnav.Link = styled.a.attrs({ className: 'nav-link' })``;\n","import React from 'react';\nimport { FaGithub, FaEnvelope, FaLinkedin, FaDev } from 'react-icons/fa';\nimport Navbar from 'ui/Nav';\n\nexport default function Nav() {\n  return (\n    <Navbar className=\"justify-content-between\">\n      <Navbar.Brand>{`</>`}</Navbar.Brand>\n      <Navbar.Items>\n        <Navbar.Item>\n          <Navbar.Link href=\"mailto:joao.hencke@gmail.com\">\n            <FaEnvelope />\n          </Navbar.Link>\n        </Navbar.Item>\n        <Navbar.Item active>\n          <Navbar.Link href=\"//github.com/joaohencke\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaGithub />\n          </Navbar.Link>\n        </Navbar.Item>\n        <Navbar.Item>\n          <Navbar.Link href=\"//www.linkedin.com/in/joaohencke/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaLinkedin />\n          </Navbar.Link>\n        </Navbar.Item>\n        <Navbar.Item>\n          <Navbar.Link href=\"//dev.to/joaohencke\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <FaDev />\n          </Navbar.Link>\n        </Navbar.Item>\n      </Navbar.Items>\n    </Navbar>\n  );\n}\n","import styled from 'styled-components';\nimport classnames from 'classnames';\n\nconst Card = styled.div.attrs((props) => ({\n  className: classnames('card', { 'bg-dark': props.dark }),\n}))``;\n\nexport default Card;\n\nCard.Body = styled.div.attrs({ className: 'card-body' })``;\n\nCard.Title = styled.h4.attrs({ className: 'card-title' })``;\n","import React from 'react';\nimport Card from 'ui/Card';\n\nexport default function Profile() {\n  return (\n    <Card dark style={{ height: '100%' }}>\n      <Card.Body>\n        <Card.Title>About</Card.Title>\n        <p>Hello there!</p>\n        <p>\n          My name is&nbsp;\n          <span className=\"font-weight-bold\">João Hencke</span>\n          ,&nbsp;I am 28 years old.\n        </p>\n        <p>\n          I am an application developer / software engineer interested in technology, challenges and magic (how it\n          works???).\n        </p>\n        <p>\n          In&nbsp;\n          <span className=\"text-danger font-weight-bold\">♡</span>\n          &nbsp;with what I do!\n        </p>\n        <p>Currently working at Kiper, in Florianópolis - Santa Catarina.</p>\n        <p>Already worked at Gennera, Indra, Todo & Shift Code.</p>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Card from 'ui/Card';\n\nconst skill = (name, time, tip) => ({ name, time, tip });\n\nconst skills = [\n  skill('JavaScript', 5, 'ReactJS, React Native, VueJS, NodeJS'),\n  skill('Java', 5, 'Spring, Struts'),\n  skill('SQL', 5, 'PLSQL, TSQL, PSQL'),\n  skill('NoSQL', 5, 'Google Datastore, MongoDB, Firebase'),\n  skill('GraphQL', 1, 'Apollo'),\n  skill('Docker', 1),\n];\n\nexport default function Skills() {\n  return (\n    <Card dark style={{ height: '100%' }}>\n      <Card.Body>\n        <Card.Title>Skills</Card.Title>\n        <p>Since 2011 working with development, I was able to work with:</p>\n        <ul className=\"list-group\">\n          {skills.map(({ name, time, tip }) => (\n            <li key={name} className=\"list-group-item bg-dark d-flex justify-content-between align-items-center\">\n              <span>\n                {name}\n                &nbsp;\n                {tip && <small>({tip})</small> /* eslint-disable-line */} \n              </span>\n              <span className=\"badge badge-primary badge-pill\">{`${time}+ years`}</span>\n            </li>\n          ))}\n        </ul>\n      </Card.Body>\n    </Card>\n  );\n}\n","import HomePage from './Home';\n\nconst pages = [\n  {\n    path: '/',\n    exact: true,\n    component: HomePage,\n  },\n];\n\nexport default pages;\n","import React from 'react';\nimport Profile from 'components/Profile';\nimport Skills from 'components/Skills';\n\nexport default function Home() {\n  return (\n    <div className=\"row\">\n      <div className=\" col-sm-12 col-md-6 col-lg-6\">\n        <Profile />\n      </div>\n      <div className=\" col-sm-12 col-md-6 col-lg-6\">\n        <Skills />\n      </div>\n    </div>\n  );\n}\n","import 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport React from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Root } from 'components';\nimport pages from 'pages';\n\nimport './App.scss';\n\nconst routes = [{\n  component: Root,\n  routes: pages,\n}];\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      {renderRoutes(routes)}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { renderRoutes } from 'react-router-config';\n\nimport Nav from '../Nav';\n\nexport default function Root({ route }) {\n  return (\n    <div className=\"container\">\n      <Nav />\n      <main>{renderRoutes(route.routes)}</main>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}